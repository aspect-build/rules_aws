load("@aspect_bazel_lib//lib:testing.bzl", "assert_contains")
load("@aspect_bazel_lib//lib:transitions.bzl", "platform_transition_filegroup")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_tarball")
load("@rules_pkg//:pkg.bzl", "pkg_tar")

# Demonstrates that you can use the CLI in a genrule.
# The toolchain provides a "Make variable" named AWS_CLI_BIN that you can expand.
genrule(
    name = "help",
    srcs = [],
    outs = ["help.txt"],
    cmd = "$(AWS_CLI_BIN) help > $@",
    toolchains = ["@aspect_rules_aws//aws:resolved_toolchain"],
)

assert_contains(
    name = "help_test",
    actual = "help.txt",
    expected = "aws [options] <command> <subcommand> [parameters]",
)

# Demonstrate that the CLI can be included in a container image
pkg_tar(
    name = "aws_cli_layer",
    srcs = [
        "@aws_toolchains//:tar_bin",
        "@aws_toolchains//:tar_files",
    ],
    include_runfiles = True,
    package_dir = "/usr/local/aws-cli",
    strip_prefix = ".",
)

oci_image(
    name = "image",
    base = "@ubuntu",
    entrypoint = ["/usr/local/aws-cli/aws"],
    tars = [":aws_cli_layer"],
)

platform(
    name = "aarch64_linux",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:aarch64",
    ],
)

platform(
    name = "x86_64_linux",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
)

platform_transition_filegroup(
    name = "linux_image",
    srcs = [":image"],
    target_platform = select({
        "@platforms//cpu:arm64": ":aarch64_linux",
        "@platforms//cpu:x86_64": ":x86_64_linux",
    }),
)

# Manually try this out:
# $ bazel run //examples/cli:tarball
# $ docker run --rm -it awscli:latest s3api list-buckets
oci_tarball(
    name = "tarball",
    image = ":linux_image",
    repo_tags = ["awscli:latest"],
)

load("@aspect_bazel_lib//lib:expand_template.bzl", "expand_template")
load("@aspect_rules_aws//aws:defs.bzl", "s3_sync")

# Allow the destination bucket to vary depending on the stamp information
expand_template(
    name = "release_bucket",
    out = "bucket.txt",
    # as an example, use the --embed_label flag to choose a destination bucket, e.g.
    # bazel run --stamp --embed_label=prod123 //my:s3_sync
    # will sync to myorg-prod123-bucket
    stamp_substitutions = {"dev": "{{BUILD_EMBED_LABEL}}"},
    # unstamped builds will release to the "dev" bucket
    template = ["myorg-dev-bucket"],
)

# Allow the destination prefix to vary depending on the stamp information
expand_template(
    name = "release_prefix",
    out = "prefix.txt",
    # as an example, use if you have the STABLE_RELEASE_PREFIX value being generated to a value of "prod789" in your workspace status script, then
    # bazel run --stamp //my:s3_sync
    # will sync to prefix-prod789/ prefix
    stamp_substitutions = {"dev": "{{STABLE_RELEASE_PREFIX}}"},
    # unstamped builds will release to the "prefix-dev" prefix
    template = ["prefix-dev/"],
)

# Example usages:
# Dry run: show what files would be copied
#  bazel run //examples/release_to_s3 -- --dry_run
# Use a different profile:
#  bazel run //examples/release_to_s3 -- --profile=prod
s3_sync(
    name = "release_to_s3",
    srcs = ["my_file.txt"],
    bucket = ":release_bucket",
    prefix = ":release_prefix",
    role = "arn:aws:iam::250292866473:role/AspectEngineering",
)
